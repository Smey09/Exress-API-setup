name: CI/CD Pipeline for Service

on:
  pull_request:
    branches: [main] # Specify branches as needed
    paths:
      - "withSwagger/**" # Adjust path to match the service directory
  push:
    branches: [main] # Specify branches as needed
    paths:
      - "withSwagger/**" # Adjust path to match the service directory

jobs:
  build:
    runs-on: ubuntu-latest # Specifies that the job should run on the latest Ubuntu virtual environment provided by GitHub
    defaults:
      run:
        working-directory: ./ # Adjust this to the root directory of your Node.js project

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensures all branches and tags are fetched, useful for versioning or other git-related operations

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Specify the Node.js version you require, e.g., '14', '16'

      - name: Install dependencies
        run: yarn install

      - name: Run build
        run: yarn build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifact-name
          path: ./build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifact-name
          path: ./build

      - name: Prepare Deployment Directories
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            sudo mkdir -p /home/ubuntu/apps/build
            sudo mkdir -p /home/ubuntu/apps/build/configs
            sudo chmod 777 /home/ubuntu/apps/build
            sudo chmod 777 /home/ubuntu/apps/build/configs

      - name: Copy files to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "./build/*"
          target: "/home/ubuntu/apps/build"
          strip_components: 1

      - name: Create .env File
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "MONGODB_URL=${{secrets.MONGODB_URI}}" >> /home/ubuntu/apps/build/configs/.env

      - name: Install Dependencies and Restart Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            sudo yum update -y
            sudo yum install -y nodejs npm
            sudo npm install -g yarn
            node --version
            npm --version
            yarn --version
            cd /home/ubuntu/apps/build
            yarn install
            if pm2 show product-service > /dev/null; then
              echo "Application is running. Restarting..."
              pm2 restart product-service
            else
              echo "Application is not running. Starting..."
              pm2 start yarn --name product-service -- start
            fi
